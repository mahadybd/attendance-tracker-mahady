const express = require('express');
const app = express();
const session = require('express-session');
const bcrypt = require('bcrypt');
//const bodyParser = require('body-parser');
const exphbs = require('express-handlebars');
const mongoDBSession = require('connect-mongodb-session')(session);
const dotenv = require('dotenv');
const colors = require('colors');
const morgan = require('morgan');

const connectDB = require('./config/db');

// Load Config
dotenv.config({ path: './config/config.env' });

connectDB();

const users = [];

// Static Folder
app.use(express.static('public'));
//app.use(express.static('client'));

//body Parser , for add attendance in database
app.use(express.json());

//Handlebars setting
app.engine(
 'hbs',
 exphbs({
  defaultLayout: 'main',
  extname: '.hbs',
  defaultLayout: 'index',
  layoutsDir: __dirname + '/views/layouts',
  partialsDir: __dirname + '/views/partials'
 })
);

app.set('view engine', 'hbs');
app.use(express.urlencoded({ extended: false }));

//const mongoURL = 'mongodb://localhost:27017/sessions';

const attendances = require('./routes/attendances');

//const TWO_HOURS = 1000 * 60 * 60 * 2;

// const store = new mongoDBSession({
//     uri: mongoURL,
//     collection: 'mySession'
//    });

const {
 PORT = process.env.PORT || 5000,
 NODE_ENV = 'development',

 SESS_NAME = 'sid'
 //SESS_SECRET = "ssh!quiet,it'asecret",
 //SESS_LIFETIME = TWO_HOURS
} = process.env;

const IN_PROD = NODE_ENV === 'production';

if (process.env.NODE_ENV === 'development') {
 app.use(morgan('dev'));
}

// Routes
app.use('/api/v1/attendances', attendances);
//app.use('/', require('./routes/index'));

// app.use(
//  session({
//   name: SESS_NAME,
//   resave: false,
//   saveUninitialized: false,
//   secret: SESS_SECRET,
//   cookie: {
//    maxAge: SESS_LIFETIME,
//    sameSite: true,
//    secure: IN_PROD,
//    store: store
//   }
//  })
// );

// app.get('/', (req, res) => {
//  req.session.isAuth = true;
//  res.send('Hello world');
// });

//landing Page
app.get('/', (req, res) => {
 res.render('login', { title: 'Attendance Tracker' });
});

app.get('/dashboard', (req, res) => {
 res.render('main', { title: 'Attendance Tracker' });
});

app.get('/register', (req, res) => {
 res.render('register', { title: 'Attendance Tracker' });
});

app.post('/login', (req, res) => {});

app.post('/register', async (req, res) => {
 try {
  const hashedPassword = await bcrypt.hash(req.body.password, 10);
  console.log(hashedPassword);
  users.push({
   id: Date().now().toString(),
   name: req.body.name,
   email: req.body.email,
   password: hashedPassword
  });
  res.redirect('/login');
 } catch {
  res.redirect('/register');
 }
 console.log(users);
 res.end();
});

app.listen(
 PORT,
 console.log(
  `Server running in ${process.env.NODE_ENV} mode on port ${PORT}`.yellow.bold
 )
);
